source("src/mdb.c");

#include "../src/mdb.h"
{
    #include "mdb_helper"

    before_each
    {
        mdb_t mdb_struct;
        mdb_struct.MdbQueueCmdPushCB = QueueCmdPushCB;
        mdb_struct.MdbQueueCmdPullCB = QueueCmdPullCB;
        mdb_struct.MdbTxBufCB        = TxBufCB;
        mdb_struct.MdbReconfigCB     = ReconfigCB;
        mdb_struct.p_info            = serial_number;
        mdb_struct.vmc_level         = TEST_VMC_LEVEL;

        idx = 0;
        MdbInit(mdb_struct);
    }

    describe("Initialization")
    {
        it("must be correct VMC level")
        {
            TEST_VMC_LEVEL less_then(3);
        }

        it("asdasd")
        {
            /* Reset and Initialising for 2 level Cashless */

            /* RESET */
            MdbPollSend();
            arr_to_eq(cmd_reset.str, buf, cmd_reset.len);
            WrapMdbPollReceive(0x100);

            /* POLL */
            MdbPollSend();
            arr_to_eq(cmd_poll.str, buf, cmd_poll.len);
            for (size_t i = 0; i < cmd_poll_resp.len; i++) WrapMdbPollReceive(cmd_poll_resp.str[i]);
            MdbPollSend();
            arr_to_eq(cmd_ack.str, buf, cmd_ack.len);

            /* SETUP */
            MdbPollSend();
            arr_to_eq(cmd_setup1.str, buf, cmd_setup1.len);
            for (size_t i = 0; i < cmd_setup1_resp.len; i++) WrapMdbPollReceive(cmd_setup1_resp.str[i]);
            MdbPollSend();
            arr_to_eq(cmd_ack.str, buf, cmd_ack.len);

            /* SETUP */
            MdbPollSend();
            arr_to_eq(cmd_setup2.str, buf, cmd_setup2.len);
            WrapMdbPollReceive(0x100);

            /* EXPANSION REQUEST ID */
            MdbPollSend();
            arr_to_eq(cmd_exp_req.str, buf, cmd_exp_req.len);
            WrapMdbPollReceive(0x100);

            /* POLL */
            MdbPollSend();
            arr_to_eq(cmd_poll.str, buf, cmd_poll.len);

            WrapMdbPollReceive(0x09);
            for (int i = 0; i < 29; i++)
                WrapMdbPollReceive(periph_sn[i]);
            WrapMdbPollReceive(0x102);
            MdbPollSend();
            arr_to_eq(cmd_ack.str, buf, cmd_ack.len);

             /* READER ENABLE */
            MdbPollSend();
            arr_to_eq(cmd_reader.str, buf, cmd_reader.len);
            WrapMdbPollReceive(0x100);

            // MdbPollSend(); WrapMdbPollReceive(0x100);
            // MdbPollSend(); WrapMdbPollReceive(0x100);
            // MdbPollSend(); WrapMdbPollReceive(0x100);
            // MdbPollSend(); WrapMdbPollReceive(0x100);
        }
    }
}

